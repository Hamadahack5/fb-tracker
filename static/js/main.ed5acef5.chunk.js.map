{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addToList","e","preventDefault","getMetrics","state","currentValue","getMetricsRefresh","element","pageData","postData","setState","loading","url","type","postId","facebookData","forEach","pageId","value","concat","window","FB","api","access_token","response","link","pageName","text","name","message","created_time","Date","toLocaleString","impressions","insights","data","values","reach","engagement","valueList","push","saveToDB","currentPage","includes","slice","split","pop","deleteRow","console","log","oldData","_","remove","firebase","firestore","collection","doc","appUserID","set","archive","merge","handleInputChange","target","handleDropdownChange","_ref","handleSort","clickedColumn","_this$state","column","direction","reverse","sortBy","accessToken","items","loadFacebook","bind","assertThisInitialized","forceRefresh","firebaseUI","signOut","_this2","initializeApp","apiKey","authDomain","projectId","auth","onAuthStateChanged","user","loginFacebook","uid","_this3","ui","firebaseui","AuthUI","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","credential","signInFlow","signInOptions","provider","FacebookAuthProvider","PROVIDER_ID","scopes","start","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","fbAsyncInit","init","appId","autoLogAppEvents","xfbml","version","_this4","getLoginStatus","status","getFromDB","populateSelect","_this5","get","then","exists","catch","error","react_default","a","Loader","active","disabled","_this6","pages","sort","b","localeCompare","_this7","_this$state2","className","Container","fluid","Grid","centered","padded","columns","Row","Column","width","Header","as","icon","textAlign","Icon","Content","Segment","Label","circular","color","empty","fitted","Form","onSubmit","Input","defaultValue","onChange","required","placeholder","Select","options","Button","positive","content","onClick","loader","Table","striped","compact","sortable","fixed","singleLine","HeaderCell","sorted","Body","map","_ref2","Cell","Fragment","moment","fromNow","href","rel","basic","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed5acef5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport firebase from 'firebase';\nimport * as firebaseui from 'firebaseui';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport {\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Form,\n  Button,\n  Select,\n  Loader,\n  Table,\n  Segment,\n  Label\n} from 'semantic-ui-react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accessToken: '',\n      currentValue: '',\n      currentPage: '',\n      data: [],\n      oldData: [],\n      facebookData: [],\n      items: [],\n      loading: false,\n      appUserID: '',\n      column: null,\n      direction: null\n    };\n    this.loadFacebook = this.loadFacebook.bind(this);\n    this.addToList = this.addToList.bind(this);\n    this.forceRefresh = this.forceRefresh.bind(this);\n    this.firebaseUI = this.firebaseUI.bind(this);\n    this.deleteRow = this.deleteRow.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFacebook();\n    var config = {\n      apiKey: 'AIzaSyCi8s6wYR8LT2hTLwOgEAmduO_3qZE_ohE',\n      authDomain: 'facebooktest-f856a.firebaseapp.com',\n      projectId: 'facebooktest-f856a'\n    };\n    firebase.initializeApp(config);\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.loginFacebook();\n        this.setState({appUserID: user.uid});\n        this.setState({loading: true});\n      } else {\n        this.firebaseUI();\n      }\n    });\n  }\n\n  firebaseUI() {\n    var ui = new firebaseui.auth.AuthUI(firebase.auth());\n    var uiConfig = {\n      callbacks: {\n        signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n          console.log(authResult);\n          this.setState({accessToken: authResult.credential.accessToken});\n          this.loginFacebook();\n          return false;\n        }\n      },\n      signInFlow: 'popup',\n      signInOptions: [\n        {\n          provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n          scopes: ['manage_pages', 'read_insights']\n        }\n      ]\n    };\n    ui.start('#firebaseui-auth-container', uiConfig);\n  }\n\n  signOut() {\n    firebase.auth().signOut();\n  }\n\n  loadFacebook() {\n    ((d, s, id) => {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        appId: '1497929310342175',\n        autoLogAppEvents: true,\n        xfbml: true,\n        version: 'v3.2',\n        state: true\n      });\n    };\n  }\n\n  loginFacebook() {\n    window.FB.getLoginStatus((response) => {\n      if (response.status === 'connected') {\n        window.FB.api(\n          '/me/accounts?fields=id,name,access_token',\n          (response) => {\n            this.setState({facebookData: response.data});\n            this.getFromDB();\n            this.populateSelect();\n          }\n        );\n      } else {\n        console.log('Login Failed!');\n      }\n    });\n  }\n\n  getFromDB() {\n    const db = firebase.firestore();\n    var docRef = db.collection('records').doc(this.state.appUserID);\n    docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          this.setState({data: doc.data().data});\n          this.setState({loading: false});\n        } else {\n          console.log('No such document!');\n          this.setState({loading: false});\n        }\n      })\n      .catch((error) => {\n        console.log('Error getting document', error);\n      });\n  }\n\n  saveToDB() {\n    const db = firebase.firestore();\n    db.collection('records')\n      .doc(this.state.appUserID)\n      .set({\n        data: this.state.data\n      });\n  }\n\n  loader() {\n    if (this.state.loading) {\n      return <Loader active />;\n    } else {\n      return <Loader disabled />;\n    }\n  }\n\n  forceRefresh() {\n    this.setState({oldData: this.state.data, data: []});\n    this.state.data.forEach((element) => {\n      this.getMetricsRefresh(element);\n    });\n  }\n\n  populateSelect() {\n    let pages = [];\n    this.state.facebookData.forEach((element) => {\n      pages.push({\n        value: element.id,\n        text: element.name,\n        access_token: element.access_token\n      });\n    });\n    pages.sort((a, b) => {\n      return a.text.localeCompare(b.text);\n    });\n    this.setState({facebookData: pages});\n  }\n\n  addToList = (e) => {\n    e.preventDefault();\n    this.getMetrics(this.state.currentValue);\n  };\n\n  getMetricsRefresh = (element) => {\n    this.setState({loading: true});\n    let pageData;\n    let postData;\n    let type = element.type;\n    let postId = element.postId;\n    let url;\n    this.state.facebookData.forEach((e) => {\n      if (element.pageId === e.value) {\n        pageData = e;\n      }\n    });\n    if (type === 'video') {\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_video_views),name,message,created_time`;\n    } else {\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_clicks),name,message,created_time`;\n    }\n    window.FB.api(\n      url,\n      {\n        access_token: pageData.access_token\n      },\n      (response) => {\n        if (type === 'video') {\n          postData = {\n            link: element.link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[2].values[0].value,\n            reach: response.insights.data[3].values[0].value,\n            engagement: response.insights.data[1].values[0].value\n          };\n        } else {\n          postData = {\n            link: element.link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[0].values[0].value,\n            reach: response.insights.data[1].values[0].value,\n            engagement: response.insights.data[2].values[0].value\n          };\n        }\n        let valueList = this.state.data;\n        valueList.push(postData);\n        this.setState({data: valueList});\n        this.saveToDB();\n        this.setState({loading: false});\n      }\n    );\n  };\n\n  getMetrics = (link) => {\n    let pageData;\n    let postData;\n    let type;\n    let postId;\n    let url;\n    this.state.facebookData.forEach((element) => {\n      if (this.state.currentPage === element.value) {\n        pageData = element;\n      }\n    });\n    if (link.includes('videos')) {\n      type = 'video';\n      postId = link\n        .slice(0, -1)\n        .split('/')\n        .pop();\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_video_views),name,message,created_time`;\n    } else {\n      type = 'posts';\n      postId = link.split('/').pop();\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_clicks),name,message,created_time`;\n    }\n    window.FB.api(\n      url,\n      {\n        access_token: pageData.access_token\n      },\n      (response) => {\n        if (type === 'video') {\n          postData = {\n            link: link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[2].values[0].value,\n            reach: response.insights.data[3].values[0].value,\n            engagement: response.insights.data[1].values[0].value\n          };\n        } else {\n          postData = {\n            link: link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[0].values[0].value,\n            reach: response.insights.data[1].values[0].value,\n            engagement: response.insights.data[2].values[0].value\n          };\n        }\n\n        let valueList = this.state.data;\n        valueList.push(postData);\n        this.setState({data: valueList});\n        this.saveToDB();\n      }\n    );\n  };\n\n  deleteRow = (postId) => {\n    console.log(postId);\n    let data = this.state.data;\n    let oldData = _.remove(data, (element) => {\n      if (element.postId === postId) {\n        return true;\n      }\n    });\n    this.setState({data: data});\n    this.saveToDB();\n    const db = firebase.firestore();\n    db.collection('records')\n      .doc(this.state.appUserID)\n      .set(\n        {\n          archive: oldData\n        },\n        {merge: true}\n      );\n  };\n\n  handleInputChange = (e) => {\n    this.setState({currentValue: e.target.value.split('?')[0]});\n  };\n\n  handleDropdownChange = (e, {value}) => {\n    this.setState({\n      currentPage: value\n    });\n  };\n\n  handleSort = (clickedColumn) => () => {\n    const {column, data, direction} = this.state;\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending'\n      });\n\n      return;\n    }\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending'\n    });\n  };\n\n  render() {\n    const {column, direction} = this.state;\n    return (\n      <div className=\"App\">\n        <Container fluid>\n          <Grid centered padded columns={3}>\n            <Grid.Row centered>\n            <Grid.Column width={3}>\n              </Grid.Column>\n              <Grid.Column width={10}>\n                <Header as=\"h1\" icon textAlign=\"center\">\n                  <Icon name=\"facebook\" />\n                  <Header.Content>Facebook Insights Tracker</Header.Content>\n                </Header>\n                <div id=\"firebaseui-auth-container\" />\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Segment> \n                  <Header>Legend</Header>\n                  <p><Label circular color='red' empty/>{' < 25,000'}</p>\n                  <p><Label circular color='orange' empty/>{' < 50,000'}</p>\n                  <p><Label circular color='blue' empty/>{' < 100,000'}</p>\n                  <p><Label circular color='green' empty/>{' < 500,000'}</p>\n                  <p><Icon name='star' fitted/>{' > 500,000'}</p>\n                  </Segment>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={10}>\n                <Form onSubmit={this.addToList}>\n                  <Input\n                    defaultValue={this.state.currentValue}\n                    onChange={this.handleInputChange}\n                    fluid\n                    required\n                    placeholder=\"Link\"\n                    type=\"url\"\n                  >\n                    <input />\n                    <Select\n                      placeholder=\"Page\"\n                      options={this.state.facebookData}\n                      onChange={this.handleDropdownChange}\n                    />\n                    <Button type=\"submit\">\n                      <Icon fitted name=\"add\" />\n                    </Button>\n                  </Input>\n                </Form>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={10}>\n                <Button\n                  positive\n                  content=\"Force Refresh\"\n                  onClick={this.forceRefresh}\n                />\n                <Button content=\"Sign Out\" onClick={this.signOut} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={10}>\n                {this.loader()}\n                <Table striped compact sortable fixed singleLine>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Page</Table.HeaderCell>\n                      <Table.HeaderCell>Name</Table.HeaderCell>\n                      {/* <Table.HeaderCell>Message</Table.HeaderCell> */}\n                      <Table.HeaderCell\n                        sorted={column === 'impressions' ? direction : null}\n                        onClick={this.handleSort('impressions')}\n                      >\n                        Impressions\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === 'reach' ? direction : null}\n                        onClick={this.handleSort('reach')}\n                      >\n                        Reach\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === 'engagement' ? direction : null}\n                        onClick={this.handleSort('engagement')}\n                      >\n                        Engagement\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Days Posted</Table.HeaderCell>\n                      <Table.HeaderCell>Action</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {_.map(\n                      this.state.data,\n                      ({\n                        pageName,\n                        postId,\n                        name,\n                        // message,\n                        impressions,\n                        reach,\n                        engagement,\n                        link,\n                        type,\n                        created_time\n                      }) => (\n                        <Table.Row>\n                          <Table.Cell>{pageName}</Table.Cell>\n                          <Table.Cell>{name}</Table.Cell>\n                          {/* <Table.Cell>{message}</Table.Cell> */}\n                          <Table.Cell>\n                            {impressions.toLocaleString()}\n                          </Table.Cell>\n                          <Table.Cell>\n                            {reach < 25000 ? (\n                              <Header as=\"h5\" color=\"red\">\n                                {reach.toLocaleString()}\n                              </Header>\n                            ) : reach < 50000 ? (\n                              <Header as=\"h5\" color=\"orange\">\n                                {reach.toLocaleString()}\n                              </Header>\n                            ) : reach < 100000 ? (\n                              <Header as=\"h5\" color=\"blue\">\n                                {reach.toLocaleString()}\n                              </Header>\n                            ) : reach < 500000 ? (\n                              <Header as=\"h5\" color=\"green\">\n                                {reach.toLocaleString()}\n                              </Header>\n                            ) : (\n                              <>\n                              {reach.toLocaleString()}\n                              <Icon name=\"star\" />\n                              </>\n                            )}\n                          </Table.Cell>\n                          <Table.Cell>\n                            <p>\n                              {type === 'video'\n                                ? 'Video Views '\n                                : 'Post Clicks '}\n                            </p>\n                            {engagement.toLocaleString()}\n                          </Table.Cell>\n                          <Table.Cell>\n                            {moment(created_time, \"DD/MM/YYYY h:mm a\").fromNow()}\n                          </Table.Cell>\n                          <Table.Cell textAlign=\"center\">\n                            <a\n                              href={link}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <Button basic color=\"blue\" icon=\"eye\" />\n                            </a>\n                            <Button\n                              basic\n                              color=\"red\"\n                              icon=\"trash alternate outline\"\n                              onClick={() => this.deleteRow(postId)}\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      )\n                    )}\n                  </Table.Body>\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'firebaseui/dist/firebaseui.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}